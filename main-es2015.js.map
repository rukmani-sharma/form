{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {Country} from '@angular-material-extensions/select-country';\n\n\ninterface account {\n  value: string;\n  viewValue: string;\n}\n\n\ninterface type {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'form';\n\n  onCountrySelected($event: Country) {\n    console.log($event);\n  }\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  \n  events: string[] = [];\n  opened: boolean;\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n\n\n\n  accounts: account[] = [\n    {value: 'customer-0', viewValue: 'Customer'},\n    {value: 'retailer-1', viewValue: 'Retailer'},\n    {value: 'distributor-2', viewValue: 'Distributor'}\n  ];\n\n \n\n  types: type[] = [\n    {value: 'typ-0', viewValue: 'Current'},\n    {value: 'typ-1', viewValue: 'Saving'},\n  ];\n\n\n  \n  myControl = new FormControl();\n  options: string[] = ['121001', '121002', '121003'];\n\n\n  list = new FormControl();\n  listing: string[] = ['India', 'Australia', 'Nepal'];\n\n  state = new FormControl();\n  statelist: string[] = ['Haryana', 'Punjab', 'Uttrakhand'];\n\n  city = new FormControl();\n  citylist: string[] = ['Faridabad', 'Noida', 'Ghaziabad'];\n\n  zone = new FormControl();\n  zonelist: string[] = ['Zone 1', 'Zone 2', 'Zone 3'];\n\n  territory = new FormControl();\n  territorylist: string[] = ['Territory 1', 'Territory 2', 'Territory 3'];\n\n  district = new FormControl();\n  districtlist: string[] = ['District 1', 'District 2', 'District 3'];\n\n  locality = new FormControl();\n  localitylist: string[] = ['Locality 1', 'Locality 2', 'Locality 3'];\n\n  society = new FormControl();\n  societylist: string[] = ['Society 1', 'Society 2', 'Society 3'];\n\n  block = new FormControl();\n  blocklist: string[] = ['Block 1', 'Block 2', 'Block 3'];\n\n  }\n","<mat-sidenav-container class=\"example-container\" >\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\" (opened)=\"events.push('open!')\"\n               (closed)=\"events.push('close!')\">\n    Sidenav content\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n\n    <mat-toolbar  class=\"mat-elevation-z6\">\n  <button mat-icon-button class=\"slide-btn\" (click)=\"sidenav.toggle()\">\n   <span class=\"material-icons\">menu</span>\n    </button>  <img src=\"/assets/images/Dial-ERP-Logo.svg\" class=\"logo\">\n <span class=\"example-spacer\"></span>\n\n <div fxShow=\"true\" fxHide.lt-md layout-align=\"end\">\n <button mat-button [matMenuTriggerFor]=\"menu\">Admin <span class=\"material-icons expand\">expand_more</span></button>\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item>Logout</button>\n</mat-menu>\n\n   </div>\n</mat-toolbar>\n<div class=\"container\">\n    <div class=\"row\">\n       <div class=\"col-md-6 col-12 offset-3\">\n        <div class=\"form-add\">\n            <h4 class=\"heading\">Basic Details</h4>\n            \n\n            <form class=\"example-form\">\n\n           <mat-form-field class=\"example-full-width\">\n    <mat-label>Business Name</mat-label>\n    <input matInput [formControl]=\"emailFormControl\" required\n    >\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n      Please enter a valid Business Name\n    </mat-error>\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n      Business name is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n\n\n\n              <mat-form-field>\n              <mat-label>Under Account Group</mat-label>\n              <mat-select required>\n                <mat-option *ngFor=\"let account of accounts\" [value]=\"account.value\">\n                  {{account.viewValue}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n              <mat-form-field class=\"example-full-width\">\n               <mat-label>Alias Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n              <mat-form-field class=\"example-full-width\">\n               <mat-label>Erp Id</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n\n\n            <h4 class=\"heading\">Address Details</h4>\n\n             <mat-form-field class=\"example-full-width\">\n              <input type=\"text\"\n                     placeholder=\"Pincode\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"myControl\"\n                     [matAutocomplete]=\"auto\">\n              <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n                  {{option}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"Country\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"list\"\n                     [matAutocomplete]=\"autoTest\" required=\"\">\n              <mat-autocomplete #autoTest=\"matAutocomplete\">\n                <mat-option *ngFor=\"let country of listing\" [value]=\"country\">\n                  {{country}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n           <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"State\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"list\"\n                     [matAutocomplete]=\"autoState\" required=\"\">\n              <mat-autocomplete #autoState=\"matAutocomplete\">\n                <mat-option *ngFor=\"let state of statelist\" [value]=\"state\">\n                  {{state}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n          \n             <mat-form-field class=\"example-full-width\">\n               <mat-label>Address Line 1</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n              <mat-form-field class=\"example-full-width\">\n               <mat-label>Address Line 2</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n\n\n           <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"City\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"list\"\n                     [matAutocomplete]=\"autoCity\">\n              <mat-autocomplete #autoCity=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of citylist\" [value]=\"city\">\n                  {{city}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\">\n               <mat-label>Landmark</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n            <h4 class=\"heading\">Area Planner</h4>\n               <mat-form-field class=\"example-full-width\">\n              <input type=\"text\"\n                     placeholder=\"Pincode\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"myControl\"\n                     [matAutocomplete]=\"auto\" required=\"\">\n              <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n                  {{option}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n              <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"Zone\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"zone\"\n                     [matAutocomplete]=\"autoZone\" required=\"\">\n              <mat-autocomplete #autoZone=\"matAutocomplete\">\n                <mat-option *ngFor=\"let zone of zonelist\" [value]=\"zone\">\n                  {{zone}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n\n              <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"Territory\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"territory\"\n                     [matAutocomplete]=\"autoTerritory\" required=\"\">\n              <mat-autocomplete #autoTerritory=\"matAutocomplete\">\n                <mat-option *ngFor=\"let territory of territorylist\" [value]=\"territory\">\n                  {{territory}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n              <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"District\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"district\"\n                     [matAutocomplete]=\"autoDistrict\" required=\"\">\n              <mat-autocomplete #autoDistrict=\"matAutocomplete\">\n                <mat-option *ngFor=\"let district of districtlist\" [value]=\"district\">\n                  {{district}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n                <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"Locality\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"locality\"\n                     [matAutocomplete]=\"autoLocality\">\n              <mat-autocomplete #autoLocality=\"matAutocomplete\">\n                <mat-option *ngFor=\"let locality of localitylist\" [value]=\"locality\">\n                  {{locality}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n\n             <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"Society\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"society\"\n                     [matAutocomplete]=\"autoSociety\">\n              <mat-autocomplete #autoSociety=\"matAutocomplete\">\n                <mat-option *ngFor=\"let society of societylist\" [value]=\"society\">\n                  {{society}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n               <mat-form-field class=\"example-full-width\">\n              <input type=\"text\" \n                     placeholder=\"Block\"\n                     aria-label=\"Number\"\n                     matInput\n                     [formControl]=\"block\"\n                     [matAutocomplete]=\"autoBlock\">\n              <mat-autocomplete #autoBlock=\"matAutocomplete\">\n                <mat-option *ngFor=\"let block of blocklist\" [value]=\"block\">\n                  {{block}}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n\n\n            <mat-form-field class=\"example-full-width\">\n               <mat-label>Bldg Name/Bldg Number</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n\n            <h4 class=\"heading\">Contact Details</h4>\n\n           <mat-form-field class=\"example-full-width\">\n              <mat-label>Primary Contact Name</mat-label>\n              <input matInput [formControl]=\"emailFormControl\" required\n              >\n              <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n                Please enter a valid Primary Contact Name\n              </mat-error>\n              <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n                Primary Contact Name is <strong>required</strong>\n              </mat-error>\n            </mat-form-field>\n\n\n\n              <div class=\"row\">\n                  <div class=\"col-md-6 col-6\">\n                    <mat-select-country  \n                    (onCountrySelected)=\"onCountrySelected($event)\">\n                  </mat-select-country>\n                  </div>\n\n                  <div class=\"col-md-6 col-6\">\n                      <mat-form-field class=\"example-full-width\">\n                        <mat-label>Primary Contact Mobile </mat-label>\n                        <input matInput [formControl]=\"emailFormControl\" required\n                        >\n                        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n                          Please enter a valid Primary Contact Mobile \n                        </mat-error>\n                        <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n                          Primary Contact Mobile is <strong>required</strong>\n                        </mat-error>\n                      </mat-form-field>\n                  </div>\n              </div>\n            \n\n              <mat-form-field class=\"example-full-width\">\n               <mat-label>Primary Contact Email</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n              <mat-form-field class=\"example-full-width\">\n               <mat-label>Primary Contact Designation</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n\n             <mat-form-field>\n                <mat-label>Primary Contact DOB</mat-label>\n                <input matInput [matDatepicker]=\"picker\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n\n                <mat-form-field>\n                <mat-label>Primary Contact DOA</mat-label>\n                <input matInput [matDatepicker]=\"picker\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n\n\n            <h4 class=\"heading\">Bank Details</h4>\n\n             <mat-form-field class=\"example-full-width\">\n               <mat-label>Business Name In Bank</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n               <mat-form-field class=\"example-full-width\">\n               <mat-label>Alias Name In Bank</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n               <mat-form-field class=\"example-full-width\">\n               <mat-label>Bank Account No.</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n               <mat-form-field class=\"example-full-width\">\n               <mat-label>Bank Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n               <mat-form-field class=\"example-full-width\">\n               <mat-label>IFSC Code</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n                <mat-form-field>\n              <mat-label>Account Type</mat-label>\n              <mat-select>\n                <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n                  {{type.viewValue}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n               <mat-form-field class=\"example-full-width\">\n               <mat-label>Branch Name</mat-label>\n                <input matInput>\n              </mat-form-field>\n\n              <div class=\"example-button-row\">\n                <button mat-flat-button class=\"submit-btn\">Submit</button>\n              </div>\n\n            </form>\n\n\n\n         </div>\n        </div>\n    </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MatSelectCountryModule } from '@angular-material-extensions/select-country';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectCountryModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n\n\n  ],\n  providers: [ MatNativeDateModule,],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}